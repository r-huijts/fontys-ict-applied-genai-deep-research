<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fontys ICT Applied GenAI Deep Research</title>
    <style>
        :root {
            --primary-color: #2563eb;
            --secondary-color: #1e40af;
            --background-color: #f8fafc;
            --card-background: #ffffff;
            --text-color: #334155;
            --text-secondary: #64748b;
            --border-color: #e2e8f0;
            --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            background-color: var(--background-color);
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .header {
            text-align: center;
            margin-bottom: 3rem;
            padding: 2rem 0;
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            border-radius: 12px;
            color: white;
            box-shadow: var(--shadow);
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
            font-weight: 700;
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .stats {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin: 2rem 0;
        }

        .stat-item {
            text-align: center;
            padding: 1rem;
            background: var(--card-background);
            border-radius: 8px;
            box-shadow: var(--shadow);
            min-width: 120px;
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            color: var(--primary-color);
        }

        .stat-label {
            font-size: 0.9rem;
            color: var(--text-secondary);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .papers-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            margin-top: 2rem;
        }

        .paper-card {
            background: var(--card-background);
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: var(--shadow);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            border: 1px solid var(--border-color);
        }

        .paper-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px -8px rgba(0, 0, 0, 0.15);
        }

        .paper-title {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--text-color);
        }

        .paper-description {
            color: var(--text-secondary);
            margin-bottom: 1rem;
            font-size: 0.95rem;
        }

        .paper-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            font-size: 0.85rem;
            color: var(--text-secondary);
        }

        .file-size {
            background: var(--background-color);
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            font-weight: 500;
        }

        .download-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
            background: var(--primary-color);
            color: white;
            text-decoration: none;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.2s ease;
            font-size: 0.9rem;
        }

        .download-btn:hover {
            background: var(--secondary-color);
            transform: translateY(-1px);
        }

        .download-btn:active {
            transform: translateY(0);
        }

        .last-updated {
            text-align: center;
            margin-top: 3rem;
            padding: 1rem;
            background: var(--card-background);
            border-radius: 8px;
            color: var(--text-secondary);
            font-size: 0.9rem;
        }

        .auto-update-info {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 2rem;
            text-align: center;
        }

        @media (max-width: 768px) {
            .header h1 {
                font-size: 2rem;
            }
            
            .stats {
                flex-direction: column;
                gap: 1rem;
            }
            
            .papers-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>ðŸ¤– Fontys ICT Applied GenAI Deep Research</h1>
            <p>Comprehensive research papers exploring the frontiers of Generative AI</p>
        </div>

        <div class="auto-update-info">
            <strong>ðŸ”„ Auto-Discovery Active:</strong> This page automatically detects and displays new PDF files added to the repository!
        </div>

        <div class="stats">
            <div class="stat-item">
                <div class="stat-number" id="paper-count">10</div>
                <div class="stat-label">Research Papers</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="total-size">1.8 MB</div>
                <div class="stat-label">Total Size</div>
            </div>
        </div>

        <div class="papers-grid" id="papers-container">
            <!-- Papers will be populated by JavaScript -->
        </div>

        <div class="last-updated">
            <p>Last updated: <span id="last-updated-time"></span></p>
        </div>
    </div>

    <script>
        // Paper descriptions mapping - you can add more as needed
        const paperDescriptions = {
            'antropomorphism.pdf': 'Exploring anthropomorphism in AI systems and human-computer interaction design.',
            'benchmarking.pdf': 'Comprehensive analysis of benchmarking methodologies for AI systems and performance evaluation.',
            'business_processes.pdf': 'Examining the integration of Generative AI into business processes and organizational workflows.',
            'comfyui.pdf': 'Exploring ComfyUI as a node-based interface for stable diffusion workflows, enabling complex AI image generation pipelines.',
            'diffusion_models.pdf': 'Deep dive into diffusion models, the revolutionary approach to generative AI that powers modern image synthesis.',
            'finetuning.pdf': 'Comprehensive guide to fine-tuning large language models and AI systems for specific tasks and domains.',
            'quantization.pdf': 'Technical analysis of model quantization techniques for optimizing AI model performance and deployment.',
            'samplers_schedulers.pdf': 'Detailed examination of sampling methods and scheduling algorithms in generative AI systems.',
            'the_age_of_ai_agents.pdf': 'Exploring the emergence of AI agents and their impact on future human-computer interaction.',
            'ux.pdf': 'User experience design principles and methodologies for AI-powered applications and interfaces.'
        };

        // Function to format file size
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 B';
            const k = 1024;
            const sizes = ['B', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];
        }

        // Function to format paper title
        function formatPaperTitle(filename) {
            return filename
                .replace('.pdf', '')
                .replace(/_/g, ' ')
                .replace(/\b\w/g, l => l.toUpperCase())
                .replace(/Ai/g, 'AI')
                .replace(/Ux/g, 'UX')
                .replace(/Comfyui/g, 'ComfyUI');
        }

        // Function to get file info from GitHub API
        async function getFileInfo() {
            try {
                // GitHub repository information
                const owner = 'r-huijts';
                const repo = 'fontys-ict-applied-genai-deep-research';
                const apiUrl = `https://api.github.com/repos/${owner}/${repo}/contents`;

                const response = await fetch(apiUrl);
                if (!response.ok) {
                    throw new Error(`GitHub API error: ${response.status}`);
                }

                const files = await response.json();

                // Filter for PDF files and format the data
                const pdfFiles = files
                    .filter(file => file.name.endsWith('.pdf') && file.type === 'file')
                    .map(file => ({
                        name: file.name,
                        size: file.size,
                        modified: new Date(file.download_url ? 'Unknown' : 'Unknown').toISOString().split('T')[0],
                        download_url: file.download_url
                    }));

                // If GitHub API fails or returns no PDFs, fall back to known files
                if (pdfFiles.length === 0) {
                    console.warn('No PDFs found via GitHub API, using fallback list');
                    return getFallbackFiles();
                }

                return pdfFiles;
            } catch (error) {
                console.error('Error fetching file info from GitHub API:', error);
                console.log('Falling back to known file list');
                return getFallbackFiles();
            }
        }

        // Fallback function with known files
        function getFallbackFiles() {
            return [
                { name: 'antropomorphism.pdf', size: 343772, modified: '2025-07-03' },
                { name: 'benchmarking.pdf', size: 180593, modified: '2025-07-03' },
                { name: 'business_processes.pdf', size: 190784, modified: '2025-07-03' },
                { name: 'comfyui.pdf', size: 142037, modified: '2025-07-03' },
                { name: 'diffusion_models.pdf', size: 163053, modified: '2025-07-03' },
                { name: 'finetuning.pdf', size: 131438, modified: '2025-07-03' },
                { name: 'quantization.pdf', size: 143483, modified: '2025-07-03' },
                { name: 'samplers_schedulers.pdf', size: 193655, modified: '2025-07-03' },
                { name: 'the_age_of_ai_agents.pdf', size: 178738, modified: '2025-07-03' },
                { name: 'ux.pdf', size: 246590, modified: '2025-07-03' }
            ];
        }

        // Function to render papers
        async function renderPapers() {
            const papers = await getFileInfo();
            const container = document.getElementById('papers-container');
            const totalSize = papers.reduce((sum, paper) => sum + paper.size, 0);
            
            // Update stats
            document.getElementById('paper-count').textContent = papers.length;
            document.getElementById('total-size').textContent = formatFileSize(totalSize);
            
            // Sort papers by name
            papers.sort((a, b) => a.name.localeCompare(b.name));
            
            // Generate HTML for each paper
            container.innerHTML = papers.map(paper => `
                <div class="paper-card">
                    <div class="paper-title">${formatPaperTitle(paper.name)}</div>
                    <div class="paper-description">${paperDescriptions[paper.name] || 'Research paper exploring advanced topics in AI and machine learning.'}</div>
                    <div class="paper-meta">
                        <span>Modified: ${paper.modified}</span>
                        <span class="file-size">${formatFileSize(paper.size)}</span>
                    </div>
                    <a href="${paper.name}" class="download-btn" target="_blank">
                        <span>ðŸ“„</span>
                        <span>Download PDF</span>
                    </a>
                </div>
            `).join('');
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            renderPapers();
            document.getElementById('last-updated-time').textContent = new Date().toLocaleString();
        });

        // Auto-refresh every 60 seconds to pick up new files
        setInterval(() => {
            renderPapers();
            document.getElementById('last-updated-time').textContent = new Date().toLocaleString();
        }, 60000);
    </script>
</body>
</html>